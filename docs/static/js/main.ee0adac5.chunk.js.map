{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","GifGridItem","url","title","id","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","i","GiftExpertApp","categories","categoriy","index","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACK,GAAD,OAAQH,GAAR,mBAAuBG,OACrCF,EAAc,MAMlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SApBS,SAACN,GAClBF,GAAc,WACV,OAAOE,EAAEO,OAAOF,e,QCNfG,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,IAAIC,EAAa,EAAbA,MAAa,EAAPC,GAEnC,OACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACZR,EADY,iDACkCS,UAAUF,GAD5C,+DAEDG,MAAOV,GAFN,cAEZW,EAFY,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAM,CACFA,IAAIA,EAAId,GACRD,MAAMe,EAAIf,MACVD,IAAG,UAACgB,EAAIC,cAAL,aAAC,EAAYC,iBAAiBlB,QATvB,kBAcfc,GAde,4CAAF,sDCIPK,EAAS,SAAC,GAAc,IAAbZ,EAAY,EAAZA,SAAY,ECDV,SAACA,GAAY,IAAD,EACXpB,mBAAS,CAC5B0B,KAAK,GACLO,SAAQ,IAHsB,mBAC3BC,EAD2B,KACrBC,EADqB,KAgBlC,OATAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAC,GACnBH,EAAS,CACLT,KAAKY,EACLL,SAAS,SAGlB,CAACb,IAEGc,EDbeK,CAAanB,GAA5Ba,EAFyB,EAEzBA,QAAQP,EAFiB,EAEjBA,KAMf,OAJAc,QAAQC,IAAIR,GAKR,qCACI,oBAAIjB,UAAU,oCAAd,SAAoDI,IAEnDa,GAAW,mBAAGjB,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQU,EAAKE,KAAI,SAACC,EAAIa,GAAL,OACL,cAAC,EAAD,eAEQb,GADCa,YESlBC,EA1BK,WAAI,MAEa3C,mBAAS,CAAC,kBAFvB,mBAEb4C,EAFa,KAEF7C,EAFE,KASpB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACI6C,EAAWhB,KAAI,SAACiB,EAAUC,GAAX,OACV,cAAC,EAAD,CAAyB1B,SAAUyB,GAArBA,Y,MCfnCE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ee0adac5.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleCahnge = (e) => {\r\n        setInputValue(() => {\r\n            return e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 0) {\r\n            setCategories((e) => [inputValue, ...e]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleCahnge}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({url,title,id}) =>{\r\n\r\n    return(\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","export const getGifs= async (category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9gSahZ5z1Rc9xLWLLLxyZtgJTKJdTewN`\r\n    const resp=await fetch( url );\r\n    const {data}= await resp.json();\r\n\r\n    const gifs= data.map(img=>{\r\n        return{\r\n            img:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\nreturn gifs;\r\n\r\n}","import React from 'react';\r\nimport {GifGridItem} from \"./GifGridItem\";\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid =({category})=>{\r\n\r\n    const {loading,data}= useFetchGifs(category);\r\n\r\n    console.log(loading)\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map((img,i)=>(\r\n                        <GifGridItem\r\n                            key={i}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import {useState,useEffect} from 'react'\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs=(category)=>{\r\n    const [state,setState]=useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs=>{\r\n            setState({\r\n                data:imgs,\r\n                loading: false\r\n            })\r\n        });\r\n    }, [category])\r\n    //Cuando la categy cambie salta el efecto de useEffect\r\n    return state\r\n}","import React, {useState} from 'react'\r\nimport {AddCategory} from \"./components/AddCategory\";\r\nimport {GifGrid} from \"./components/GifGrid\";\r\n\r\nconst GiftExpertApp=()=>{\r\n// const categories=['One Punch Man','Samurai X', 'Dragon Ball']\r\n    const [categories,setCategories]=useState(['One Punch Man'])\r\n\r\n    // const handldeAdd=()=>{\r\n    //    setCategories(cts=>{\r\n    //        return ([...cts,'hunterxhunter'])\r\n    //    });\r\n    // }\r\n    return(\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>{\r\n                categories.map((categoriy,index)=>\r\n                    (<GifGrid key={categoriy} category={categoriy}/>\r\n                    )\r\n            )\r\n\r\n            }\r\n\r\n            </ol>\r\n            </>\r\n    )\r\n}\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from \"./GiftExpertApp\";\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}